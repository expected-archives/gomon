name: Go

on:
  push:
    tags:
      - '*'

jobs:
  build:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.13
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Get dependencies
        run: |
          go get -v -t -d ./...

      - name: Build
        run: |
          GOOS=linux GOARCH=amd64 go build -o builds/gomon-linux-amd64 -v .
          GOOS=darwin GOARCH=amd64 go build -o builds/gomon-darwin-amd64 -v .
          ls -l builds

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload gomon-linux-amd64
        id: upload-release-asset-gomon-linux-amd64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: builds/gomon-linux-amd64
          asset_name: gomon-linux-amd64
          asset_content_type: application/octet-stream

      - name: Wait
        run: sleep 2

      - name: Upload gomon-darwin-amd64
        id: upload-release-asset-darwin-amd64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: builds/gomon-darwin-amd64
          asset_name: gomon-darwin-amd64
          asset_content_type: application/octet-stream

